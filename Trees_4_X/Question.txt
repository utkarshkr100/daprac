//basically set means Similiar types Of Questions.
//https://medium.com/javarevisited/20-binary-tree-algorithms-problems-from-coding-interviews-c5e5a384df30
                                                                    Trees Set :-01
Question 1:
 Implement Binary Tree.
 
Question 2:
 How do you perform preorder traversal in a given binary tree?

Question 3:
 How do you traverse a given binary tree in preorder without recursion?
 
Question 4:
 How do you perform an inorder traversal in a given binary tree?

Question 5:
 How do you print all nodes of a given binary tree using inorder traversal without recursion? 
 
Question 6:
 How do you implement a postorder traversal algorithm? 
 
Question 7:
 How do you traverse a binary tree in postorder traversal without recursion?
 
Question 8:
 How are all leaves of a binary search tree printed?
 
Question 9:
Level Order Traversal with Rec.

Question 10:
Level Order Traversal w/o rec.

Question 11:
Give an algorithm for finding maximum element in binary tree.

Question 12:
Give an algorithm for finding maximum element in binary tree without recursion.

Question 13:
Give an algorithm for searching an element in binary tree.


Question 14:
Give an algorithm for searching an element in binary tree without recursion.


Question 15:
Give an algorithm for inserting an element into binary tree.


Question 16:
Give an algorithm for inserting an element into binary tree.(Without Rec.)


Question 17:
Give an algorithm for finding the size of binary tree.


Question 18:
Can we solve Problem-17 without recursion?(use Level Order Traversal).

Question 19:
Give an algorithm for deleting the tree.

Question 20:
Give an algorithm for printing the level order data in reverse order. For example,
the output for the below tree should be: 4 5 6 7 2 3 1

Question 21:
Give an algorithm for finding the height (or depth) of the binary tree.

Question 22:
Can we solve Problem-21 with stack?
yes,solve.

Question 23:
Can we solve Problem-21 without recursion?

Question 24:
Give an algorithm for finding the minimum depth of the binary tree.

Question 25:
Give an algorithm for finding the deepest node of the binary tree.

Question 26:
Give an algorithm for finding the number of leaves in the binary tree without
using recursion.

Question 27:
Give an algorithm for finding the number of full nodes in the binary tree without
using recursion.

Question 28:
Give an algorithm for finding the number of half nodes (nodes with only one
child) in the binary tree without using recursion.

Question 29:
Given two binary trees, return true if they are structurally identical.
Solution:
Algorithm:
• If both trees are NULL then return true.
• If both trees are not NULL, then recursively check left and right subtree structures.

Question 31:
Give an algorithm for finding the diameter of the binary tree. The diameter of a
tree (sometimes called the width) is the number of nodes on the longest path between two
leaves in the tree.

Question 32:
Give an algorithm for finding the width of the binary tree. The diameter of a tree
is the maximum number of nodes at any level (or depth) in the tree.

Question 33:
Give an algorithm for finding the level that has the maximum sum in the binary
tree.

Question 34:
Given a binary tree, print out all its root-to-leaf paths.

Question 35:
Give an algorithm for checking the existence of path with given sum. That
means, given a sum, check whether there exists a path from root to any of the nodes.

Question 36:
Give an algorithm for finding the sum of all elements in binary tree.

Question 37:
Can we solve Problem-36 without recursion?

Question 38:
Give an algorithm for converting a tree to its mirror. Mirror of a tree is another
tree with left and right children of all non-leaf nodes interchanged. The trees below are
mirrors to each other.


Question 39:
Given two trees, give an algorithm for checking whether they are mirrors of
each other.

Question 40:
Give an algorithm for constructing binary tree from given Inorder and Preorder
traversals.

Question 41:
Give an algorithm for constructing binary tree from given Inorder and Postorder
traversals.

Question 42:
Give an algorithm for printing all the ancestors of a node in a Binary tree. For
the tree below, for 7 the ancestors are 1 3 7.

Question 43:
Give an algorithm for finding LCA (Least Common Ancestor) of two nodes in a
Binary Tree.

Question 44:
Zigzag Tree Traversal: Give an algorithm to traverse a binary tree in Zigzag
order. For example, the output for the tree below should be: 1 3 2 4 5 6 7

Question 45:
Give an algorithm for finding the vertical sum of a binary tree. For example,
The tree has 5 vertical lines
Vertical-1: nodes-4 => vertical sum is 4
Vertical-2: nodes-2 => vertical sum is 2
Vertical-3: nodes-1,5,6 => vertical sum is 1 + 5 + 6 = 12
Vertical-4: nodes-3 => vertical sum is 3
Vertical-5: nodes-7 => vertical sum is 7
We need to output: 4 2 12 3 7
//Refer Book For Daigram.

Question 46:
How many different binary trees are possible with n nodes?
//write code for it.
                                            //In Next Question Set Binary Search Tree Start.
